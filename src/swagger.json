{
	"openapi": "3.0.0",
	"info": {
		"title": "API de Investimentos",
		"description": "Esta aplicação tem como objetivo gerenciar investimentos em ações, com algumas funcionalidades de conta digital.",
		"contact": {
			"name": "Brenndha Cabral",
			"url": "https://github.com/brenndha-cabral",
			"email": "brenndha.cabral@yahoo.com"
		},
		"version": "1.0.0"
	},
	"servers": [
		{
			"url": "https://bc-invest-api.herokuapp.com",
			"description": "API de produção"
		},
		{ 
		"url": "http://localhost:3000",
		"description": "API de desenvolvimento"
	}],
	"securityDefinitions": {
		"Bearer": {
			"type": "apiKey",
			"name": "Authorization",
			"in": "header"
		}
	},
	"paths": {
		"/login": {
			"post": {
				"summary": "Login para acessar a aplicação",
				"description": "Esta rota irá permitir que a pessoa usuária faça login para ter acesso a aplicação. Caso a pessoa usuária não possua login, deve se cadastrar para gerar um token. Ao fazer o login, deve-se copiar o token gerado e colar em `Authorize` para que seja autenticado e autorizado e a API seja liberada para consumo. Apenas a rota `POST /clientes` que é aberta para a pessoa usuária se cadastrar e ser gerado um token.",
				"tags": [
					"Login"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Login"
							},
							"examples": {
								"login": {
									"value": {
										"email": "lewishamilton@gmail.com",
										"password": "123456"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywibmFtZSI6Ikxld2lzIEhhbWlsdG9uIiwiYWRtIjp0cnVlLCJpYXQiOjE2NTg0NDAyMjIsImV4cCI6MTY1ODQ2MTgyMn0.2SP8SCEe5EcuTNbM58Xy4t80HzpGEKZwoavbrS8IAsI"
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request | Respostas possíveis (Será enviado apenas um objeto com uma mensagem por requisição)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": [{
											"message": "Invalid email. Please enter a valid email address."
										},
										{
											"message": "The password must be at least 6 digits long. Please enter a valid password."
										},
										{
											"message": "Invalid credentials. Please, try again."
										}
									]
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error | Respostas possíveis (Será enviado apenas um objeto com uma mensagem por requisição)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": [{
										"message": "Unexpected error. Please try again."
									},
									{
										"message": "Could not generate token. Please, try again."
									}]
								}
							}
						}
					}
				}
			}
		},
		"/clientes": {
			"get": {
				"summary": "Lista todas as pessoas clientes",
				"description": "Esta rota irá listar todas as pessoas clientes que não sejam `adm`, é preciso que a pessoa usuária esteja logada.",
				"tags": [
					"Clientes"
				],
				"security": [{
					"bearerAuth": []
				}],
				"responses": {
					"200": {
						"description": "OK | Retorna um array com todas as pessoas clientes não administrativas.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": [{
										"name": "Michael Schumacher",
										"email": "michaelSchumacher@gmail.com",
										"cpf": "222222222222",
										"image": "https://sportbuzz.uol.com.br/media/_versions/gettyimages-52491565_widelg.jpg",
										"adm": false,
										"balance": 3070.00,
										"phone": "111111111111",
										"address": "Avenue Express, 672 NY",
										"created": "2021-07-01T19:58:00.000Z"
									}]
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized | Respostas possíveis (Será enviado apenas um objeto com uma mensagem por requisição)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": [{
											"message": "Token not found"
										},
										{
											"message": "Token invalid"
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Clients not found. Please, try again."
									}
								}
							}
						}
					},
					"500": {
						"description": "Unexpected error. Please try again",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Unexpected error. Please try again"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Insere uma nova pessoa cliente",
				"description": "Esta rota irá inserir uma nova pessoa cliente e gerar um token no retorno.",
				"tags": [
					"Clientes"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Criar Cliente"
							},
							"examples": {
								"client": {
									"value": {
										"name": "Lewis Hamilton",
										"email": "lewishamilton@gmail.com",
										"password": "123456",
										"confirmPassword": "123456",
										"cpf": "11111111111",
										"image": "https://upload.wikimedia.org/wikipedia/commons/1/18/Lewis_Hamilton_2016_Malaysia_2.jpg",
										"phone": "111111111111",
										"address": "Avenue Regex, 576 NY"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywibmFtZSI6Ikxld2lzIEhhbWlsdG9uIiwiYWRtIjp0cnVlLCJpYXQiOjE2NTg0NDAyMjIsImV4cCI6MTY1ODQ2MTgyMn0.2SP8SCEe5EcuTNbM58Xy4t80HzpGEKZwoavbrS8IAsI"
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request | Respostas possíveis (Será enviado apenas um objeto com uma mensagem por requisição)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": [{
											"message": "'name' is required"
										},
										{
											"message": "'name' must be a string"
										},
										{
											"message": "'name' length must be at least 3 characters long"
										},
										{
											"message": "'email' is required"
										},
										{
											"message": "'email' must be a email"
										},
										{
											"message": "'password' is required"
										},
										{
											"message": "'password' length must be at least 6 characters long"
										},
										{
											"message": "'confirmPassword' is required"
										},
										{
											"message": "'cpf' is required"
										},
										{
											"message": "'cpf' must be a string"
										},
										{
											"message": "'cpf' length must be at 11 characters long"
										},
										{
											"message": "'image' must be a string"
										},
										{
											"message": "'phone' is required"
										},
										{
											"message": "'phone' must be a string"
										},
										{
											"message": "'phone' length must be at 12 characters long"
										},
										{
											"message": "'address' is required"
										},
										{
											"message": "'address' must be a string"
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Client not found. Please, try again."
									}
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Client already registered."
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Unexpected error. Please try again"
									}
								}
							}
						}
					}
				}
			}
		},
		"/clientes/{id}": {
			"get": {
				"summary": "Retorna uma pessoa cliente pelo id",
				"description": "Esta rota irá retornar uma pessoa cliente pelo id, é preciso que a pessoa usuária esteja logada.",
				"tags": [
					"Clientes"
				],
				"parameters": [{
					"in": "path",
					"name": "id",
					"type": "string",
					"required": true
				}],
				"security": [{
					"bearerAuth": []
				}],
				"responses": {
					"200": {
						"description": "OK | Retorna um objeto com a pessoa cliente não administrativa.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"name": "Michael Schumacher",
										"email": "michaelSchumacher@gmail.com",
										"cpf": "222222222222",
										"image": "https://sportbuzz.uol.com.br/media/_versions/gettyimages-52491565_widelg.jpg",
										"adm": false,
										"balance": 3070.00,
										"phone": "111111111111",
										"address": "Avenue Express, 672 NY",
										"created": "2021-07-01T19:58:00.000Z"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized | Respostas possíveis (Será enviado apenas um objeto com uma mensagem por requisição)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": [{
											"message": "Token not found"
										},
										{
											"message": "Token invalid"
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Client not found. Please, try again."
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Unexpected error. Please try again"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Remove a pessoa cliente pelo id",
				"description": "Esta rota irá remover a pessoa cliente pelo id, é preciso que a pessoa usuária esteja logada. Para remover, é necessário que a pessoa logada seja uma administradora ou a própria pessoa cliente.",
				"tags": [
					"Clientes"
				],
				"parameters": [{
					"in": "path",
					"name": "id",
					"type": "string",
					"required": true
				}],
				"security": [{
					"bearerAuth": []
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized | Respostas possíveis (Será enviado apenas um objeto com uma mensagem por requisição)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": [{
											"message": "Token not found"
										},
										{
											"message": "Token invalid"
										}
									]
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Not authorized to delete this asset. Only admins or the same client can delete itself."
									}
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Client not found. Please, try again."
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Unexpected error. Please try again"
									}
								}
							}
						}
					}
				}
			}
		},
		"/ativos": {
			"get": {
				"summary": "Lista todos os ativos",
				"description": "Esta rota irá listar todos os ativos, é preciso que a pessoa usuária esteja logada.",
				"tags": [
					"Ativos"
				],
				"security": [{
					"bearerAuth": []
				}],
				"responses": {
					"200": {
						"description": "OK | Retorna um array com todos os ativos",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": [{
										"id": 1,
										"name": "Vale",
										"code": "VALE3",
										"quantity": 300,
										"value": "18.50",
										"created": "2021-07-01T19:58:00.000Z"
									}]
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized | Respostas possíveis (Será enviado apenas um objeto com uma mensagem por requisição)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": [{
											"message": "Token not found"
										},
										{
											"message": "Token invalid"
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Assets not found"
									}
								}
							}
						},
						"500": {
							"description": "Unexpected error. Please try again",
							"content": {
								"application/json": {
									"schema": {
										"type": "object",
										"example": {
											"message": "Unexpected error. Please try again"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Unexpected error. Please try again"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Insere um novo ativo",
				"description": "Esta rota irá inserir um novo ativo, é preciso que a pessoa usuária esteja logada e que seja `adm`.",
				"tags": [
					"Ativos"
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Criar Ativo"
							},
							"examples": {
								"asset": {
									"value": {
										"name": "Vale",
										"code": "VALE3",
										"quantity": 300,
										"value": "18.50"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Asset created successfully"
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Invalid fields"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized | Respostas possíveis (Será enviado apenas um objeto com uma mensagem por requisição)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": [{
											"message": "Token not found"
										},
										{
											"message": "Token invalid"
										}
									]
								}
							}
						}
					},
					"403": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Client not authorized to add new asset. Only admins can add new assets."
									}
								}
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Asset already registered"
									}
								}
							}
						}
					},
					"500": {
						"description": "Not possible create an asset. Please try again",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Unexpected error. Please try again"
									}
								}
							}
						}
					}
				}
			}
		},
		"/ativos/{id}": {
			"get": {
				"summary": "Retorna o ativo pelo id",
				"description": "Esta rota irá retornar o ativo pelo id, é preciso que a pessoa usuária esteja logada.",
				"tags": [
					"Ativos"
				],
				"parameters": [{
					"in": "path",
					"name": "id",
					"type": "string",
					"required": true
				}],
				"security": [{
					"bearerAuth": []
				}],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"codAtivo": 1,
										"qtdeAtivo": 300,
										"valor": "18.50"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized | Respostas possíveis (Será enviado apenas um objeto com uma mensagem por requisição)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": [{
											"message": "Token not found"
										},
										{
											"message": "Token invalid"
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Asset not found. Please, try again."
									}
								}
							}
						}
					},
					"500": {
						"description": "Unexpected error. Please try again",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Unexpected error. Please try again"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Remove o ativo pelo id",
				"description": "Esta rota irá remover o ativo pelo id, é preciso que a pessoa usuária esteja logada.",
				"tags": [
					"Ativos"
				],
				"parameters": [{
					"in": "path",
					"name": "id",
					"type": "string",
					"required": true
				}],
				"security": [{
					"bearerAuth": []
				}],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Asset Successfully deleted"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized | Respostas possíveis (Será enviado apenas um objeto com uma mensagem por requisição)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": [{
											"message": "Token not found"
										},
										{
											"message": "Token invalid"
										}
									]
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Not authorized to delete this asset. Only admins can delete it."
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Unexpected error. Please try again"
									}
								}
							}
						}
					}
				}
			}
		},
		"/ativos/clientes/{id}": {
			"get": {
				"summary": "Retorna o a pessoa cliente pelo id com todos os ativos que ela possui",
				"description": "Esta rota irá retornar a pessoa cliente pelo id com todos os ativos que ela possui, é preciso que a pessoa usuária esteja logada.",
				"tags": [
					"Ativos"
				],
				"parameters": [{
					"in": "path",
					"name": "id",
					"type": "string",
					"required": true
				}],
				"security": [{
					"bearerAuth": []
				}],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"codCliente": 1,
										"wallet": [{
											"codAtivo": 1,
											"qtdeAtivo": 28,
											"valor": 12.80
										}]
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized | Respostas possíveis (Será enviado apenas um objeto com uma mensagem por requisição)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": [{
											"message": "Token not found"
										},
										{
											"message": "Token invalid"
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Client not found. Please, try again."
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Unexpected error. Please try again"
									}
								}
							}
						}
					}
				}
			}
		},
		"/investimentos/comprar": {
			"post": {
				"summary": "Insere um nova ordem de compra",
				"description": "Esta rota irá criar uma nova ordem de compra",
				"tags": [
					"Investimentos"
				],
				"security": [{
					"bearerAuth": []
				}],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Investimento"
							},
							"examples": {
								"order": {
									"value": {
										"codCliente": 1,
										"codAtivo": 6,
										"qtdeAtivo": 12
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Order created successfully."
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request | Respostas possíveis (Será enviado apenas um objeto com uma mensagem por requisição)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": [{
											"message": "'codCliente' is required."
										},
										{
											"message": "'codCliente' must be a number."
										},
										{
											"message": "'codAtivo' is required."
										},
										{
											"message": "'codAtivo' must be a number."
										},
										{
											"message": "'qtdeAtivo' is required."
										},
										{
											"message": "'qtdeAtivo' must be a number."
										},
										{
											"message": "Asset quantity must be less or equal the available. Please, try again."
										},
										{
											"message": "Client does not have sufficient balance for the transaction. Please, try again."
										}
									]
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized | Respostas possíveis (Será enviado apenas um objeto com uma mensagem por requisição)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": [{
											"message": "Token not found"
										},
										{
											"message": "Token invalid"
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "Not Found | Respostas possíveis (Será enviado apenas um objeto com uma mensagem por requisição)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": [{
											"message": "Client not found. Please, try again."
										},
										{
											"message": "Asset not found. Please, try again."
										}
									]
								}
							}
						}
					},
					"500": {
						"description": "Unexpected error. Please try again",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Unable to trade an asset. Please, try again."
									}
								}
							}
						}
					}
				}
			}
		},
		"/investimentos/vender": {
			"post": {
				"summary": "Insere um nova ordem de venda",
				"description": "Esta rota irá criar uma nova ordem de venda",
				"tags": [
					"Investimentos"
				],
				"security": [{
					"bearerAuth": []
				}],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Investimento"
							},
							"examples": {
								"order": {
									"value": {
										"codCliente": 1,
										"codAtivo": 6,
										"qtdeAtivo": 12
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Order created successfully."
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request | Respostas possíveis (Será enviado apenas um objeto com uma mensagem por requisição)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": [{
											"message": "'codCliente' is required."
										},
										{
											"message": "'codCliente' must be a number."
										},
										{
											"message": "'codAtivo' is required."
										},
										{
											"message": "'codAtivo' must be a number."
										},
										{
											"message": "'qtdeAtivo' is required."
										},
										{
											"message": "'qtdeAtivo' must be a number."
										},
										{
											"message": "Asset quantity must be less or equal the available or client does not have this asset. Please, try again."
										}
									]
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized | Respostas possíveis (Será enviado apenas um objeto com uma mensagem por requisição)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": [{
											"message": "Token not found"
										},
										{
											"message": "Token invalid"
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "Not Found | Respostas possíveis (Será enviado apenas um objeto com uma mensagem por requisição)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": [{
											"message": "Client not found. Please, try again."
										},
										{
											"message": "Asset not found. Please, try again."
										}
									]
								}
							}
						}
					},
					"500": {
						"description": "Unexpected error. Please try again",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Unable to trade an asset. Please, try again."
									}
								}
							}
						}
					}
				}
			}
		},
		"/conta/deposito": {
			"post": {
				"summary": "Deposita um valor na conta do usuário",
				"description": "Esta rota irá permitir que se adiciona saldo na conta do usuário",
				"tags": [
					"Conta"
				],
				"security": [{
					"bearerAuth": []
				}],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Conta"
							},
							"examples": {
								"login": {
									"value": {
										"codCliente": 1,
										"valor": 1000.00
									}
								}
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Balance updated successfully."
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request | Respostas possíveis (Será enviado apenas um objeto com uma mensagem por requisição)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": [{
											"message": "'codCliente' is required."
										},
										{
											"message": "'codCliente' must be a number."
										},
										{
											"message": "'valor' is required."
										},
										{
											"message": "'valor' must be a number."
										},
										{
											"message": "Value must be greater then zero. Please, try again."
										}
									]
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized | Respostas possíveis (Será enviado apenas um objeto com uma mensagem por requisição)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": [{
											"message": "Token not found"
										},
										{
											"message": "Token invalid"
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Client not found. Please, try again."
									}
								}
							}
						}
					},
					"500": {
						"description": "Unexpected error. Please try again",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Not possible update balance. Please, try again."
									}
								}
							}
						}
					}
				}
			}
		},
		"/conta/saque": {
			"post": {
				"summary": "Saca um valor da conta do usuário",
				"description": "Esta rota irá permitir que se remova saldo da conta do usuário",
				"tags": [
					"Conta"
				],
				"security": [{
					"bearerAuth": []
				}],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Conta"
							},
							"examples": {
								"login": {
									"value": {
										"codCliente": 1,
										"valor": 1000.00
									}
								}
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Balance updated successfully."
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request | Respostas possíveis (Será enviado apenas um objeto com uma mensagem por requisição)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": [{
											"message": "'codCliente' is required."
										},
										{
											"message": "'codCliente' must be a number."
										},
										{
											"message": "'valor' is required."
										},
										{
											"message": "'valor' must be a number."
										},
										{
											"message": "Value must be greater then zero and available in balance. Please, try again."
										}
									]
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized | Respostas possíveis (Será enviado apenas um objeto com uma mensagem por requisição)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": [{
											"message": "Token not found"
										},
										{
											"message": "Token invalid"
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Client not found. Please, try again."
									}
								}
							}
						}
					},
					"500": {
						"description": "Unexpected error. Please try again",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Not possible update balance. Please, try again."
									}
								}
							}
						}
					}
				}
			}
		},
		"/conta/{id}": {
			"get": {
				"summary": "Verifica o saldo da conta do usuário",
				"description": "Esta rota irá permitir que se verifique o saldo da conta do usuário",
				"tags": [
					"Conta"
				],
				"parameters": [{
					"in": "path",
					"name": "id",
					"type": "string",
					"required": true
				}],
				"security": [{
					"bearerAuth": []
				}],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"codCliente": 1,
										"saldo": 200
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized | Respostas possíveis (Será enviado apenas um objeto com uma mensagem por requisição)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": [{
											"message": "Token not found"
										},
										{
											"message": "Token invalid"
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Balance not found. Please, try again."
									}
								}
							}
						}
					},
					"500": {
						"description": "Unexpected error. Please try again",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"example": {
										"message": "Unexpected error. Please try again"
									}
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"Login": {
				"type": "object",
				"properties": {
					"email": {
						"type": "string",
						"required": true
					},
					"password": {
						"type": "string",
						"required": true
					}
				}
			},
			"Criar Cliente": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"required": true
					},
					"email": {
						"type": "string",
						"required": true
					},
					"password": {
						"type": "string",
						"required": true
					},
					"confirmPassword": {
						"type": "string",
						"required": true
					},
					"cpf": {
						"type": "string",
						"required": true
					},
					"image": {
						"type": "string"
					},
					"phone": {
						"type": "string",
						"required": true
					},
					"address": {
						"type": "string",
						"required": true
					}
				}
			},
			"Criar Ativo": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"required": true
					},
					"code": {
						"type": "string",
						"required": true
					},
					"quantity": {
						"type": "number",
						"required": true
					},
					"value": {
						"type": "number",
						"required": true
					}
				}
			},
			"Investimento": {
				"type": "object",
				"properties": {
					"codCliente": {
						"type": "number",
						"required": true
					},
					"codAtivo": {
						"type": "number",
						"required": true
					},
					"qtdeAtivo": {
						"type": "number",
						"required": true
					}
				}
			},
			"Conta": {
				"type": "object",
				"properties": {
					"codCliente": {
						"type": "number",
						"required": true
					},
					"valor": {
						"type": "number",
						"required": true
					}
				}
			}
		},
		"securitySchemes": {
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"in": "header",
				"value": "Inset token here",
				"bearerFormat": "JWT"
			}
		}
	}
}